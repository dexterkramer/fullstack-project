version: "3.8"
services:

# # #############################
# # ######### keycloak ##########
# # #############################

  kc-postgres:
    image: postgres
    container_name: kc-postgres
    environment:
      - POSTGRES_USER=${KC_DB_USER}
      - POSTGRES_DATABASE=${KC_DB_DATABASE}
      - POSTGRES_PASSWORD=${KC_DB_PASSWORD}
    volumes:
      - "./keycloak/postgres_data:/var/lib/postgresql/data"
    networks:
      - fullstack_net
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d keycloak -U keycloak"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  keycloak:
    image: quay.io/keycloak/keycloak:19.0.1
    container_name: keycloak
    # volumes:
    #   - /etc/localtime:/etc/localtime:ro
    # add plugins for hot deployment in running in KC
    #   - ./plugins:/opt/jboss/keycloak/standalone/deployments/
    volumes:
      - "./keycloak/realms/import:/opt/keycloak/data/import"
    command: start-dev
    # entrypoint: /opt/keycloak/bin/kc.sh start --auto-build
    env_file:
      - ./keycloak/.env
    environment:
      KC_FEATURES:
        authorization
        token-exchange
        docker
        impersonation
        scripts
        upload-scripts
        web-authn
        client-policies
        dynamic-scopes
    networks:
      - fullstack_net
    ports:
      - 8080:8080
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master"]
    #   start_period: 10s
    #   interval: 10s
    #   retries: 9
    #   timeout: 5s
    depends_on:
      kc-postgres:
        condition: service_healthy

networks:
  fullstack_net:
    driver: bridge
