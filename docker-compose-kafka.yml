version: "3.8"
services:

# ######################
# ####### Kafka ########
# ######################

  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    # volumes:
    #   - ./kafka/zookeeper/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      # KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf
    logging:
      driver: none
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      retries: 50
      interval: 3s
    networks:
      - fullstack_net

  broker:
    image: confluentinc/cp-kafka
    hostname: broker
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
      # keycloak:
      #   condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 10s
      retries: 25
      start_period: 20s
    ports:
      - "9092:9092"
    expose:
    - "9093"
    environment:
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092,SASL_PLAINTEXT://broker:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://0.0.0.0:9092,SASL_PLAINTEXT://0.0.0.0:9093
      ZOOKEEPER_SASL_ENABLED: "FALSE"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: OAUTHBEARER
      KAFKA_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_SASL__PLAINTEXT_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_SASL__PLAINTEXT_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler
      KAFKA_sasl_oauthbearer_jwks_endpoint_url: http://keycloak:8080/realms/kafka/protocol/openid-connect/certs
      KAFKA_sasl_oauthbearer_token_endpoint_url: http://keycloak:8080/realms/kafka/protocol/openid-connect/token
      KAFKA_sasl_oauthbearer_expected_audience: account
    volumes:
      - ./kafka/broker/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
      # - ./kafka/config/server.properties:/etc/kafka/server.properties
    logging:
      driver: none
    networks:
      - fullstack_net

  schema_registry:
    image: confluentinc/cp-schema-registry
    hostname: schema_registry
    container_name: schema_registry
    depends_on:
      zookeeper:
        condition: service_healthy
      broker:
        condition: service_healthy
      # keycloak:
      #   condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'SASL_PLAINTEXT://broker:9093'
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: OAUTHBEARER
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        clientSecret=\"bXy0IGRaKftAXraRDBtgj8pyWzib9AFB\" \
        clientId=\"kafka_schema_registry\";"
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
      SCHEMA_REGISTRY_KAFKASTORE_SASL_LOGIN_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler 
      SCHEMA_REGISTRY_KAFKASTORE_SASL_SERVER_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerValidatorCallbackHandler
      SCHEMA_REGISTRY_KAFKASTORE_SASL_oauthbearer_jwks_endpoint_url: http://keycloak:8080/realms/kafka/protocol/openid-connect/certs
      SCHEMA_REGISTRY_KAFKASTORE_SASL_oauthbearer_token_endpoint_url: http://keycloak:8080/realms/kafka/protocol/openid-connect/token
      SCHEMA_REGISTRY_KAFKASTORE_SASL_oauthbearer_expected_audience: account
    logging:
      driver: none
    networks:
      - fullstack_net
    healthcheck:
      test: ["CMD", "curl", "--output", "/dev/null", "--silent", "--head", "--fail", "http://schema_registry:8081/subjects"]
      interval: 10s
      retries: 20
  
  connect:
    image: confluentinc/cp-kafka-connect
    hostname: connect
    container_name: connect
    depends_on:
      zookeeper:
        condition: service_healthy
      broker:
        condition: service_healthy
      # keycloak:
      #   condition: service_healthy
      schema_registry:
        condition: service_healthy
    ports:
      - "8083:8083"
    volumes:
      - ./kafka/plugins:/tmp/connect-plugins
    environment:
      CONNECT_SASL_MECHANISM: OAUTHBEARER
      CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        clientSecret=\"wMpzarS7HGeWBTcUhnfuiXaHDILCfRrH\" \
        clientId=\"kafka_connect\";"
      CONNECT_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_SASL_LOGIN_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler 
      CONNECT_SASL_SERVER_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerValidatorCallbackHandler
      CONNECT_sasl_oauthbearer_jwks_endpoint_url: http://keycloak:8080/realms/kafka/protocol/openid-connect/certs
      CONNECT_sasl_oauthbearer_token_endpoint_url: http://keycloak:8080/realms/kafka/protocol/openid-connect/token
      CONNECT_sasl_oauthbearer_expected_audience: account
      CONNECT_BOOTSTRAP_SERVERS: 'broker:9093'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_PLUGIN_PATH: /usr/share/java,/tmp/connect-plugins
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=DEBUG,org.I0Itec.zkclient=DEBUG,org.reflections=ERROR
    # command:
    #  - bash
    #  - -c
    #  - |
    #    confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:5.0.0
    #     /etc/confluent/docker/run
    logging:
      driver: none
    # healthcheck:
    #   interval: 10s
    #   retries: 20
    #   test: curl --user connectAdmin:connectAdmin --fail --silent --insecure https://connect:8083/ --output /dev/null || exit 1
    # network_mode: host
    networks:
      - fullstack_net

  control-center:
    image: confluentinc/cp-enterprise-control-center
    hostname: control-center
    container_name: control-center
    depends_on:
      zookeeper:
        condition: service_healthy
      broker:
        condition: service_healthy
      # keycloak:
      #   condition: service_healthy
      schema_registry:
        condition: service_healthy
      # connect:
      #   condition: service_healthy
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_STREAMS_SASL_MECHANISM: OAUTHBEARER
      CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        clientSecret=\"BxGaTSzcxwtpQYmIHEvgbMeQhoFtMHXx\" \
        clientId=\"kafka_control_center\";"
      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONTROL_CENTER_STREAMS_SASL_LOGIN_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler 
      CONTROL_CENTER_SASL_SERVER_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerValidatorCallbackHandler
      CONTROL_CENTER_STREAMS_sasl_oauthbearer_jwks_endpoint_url: http://keycloak:8080/realms/kafka/protocol/openid-connect/certs
      CONTROL_CENTER_STREAMS_sasl_oauthbearer_token_endpoint_url: http://keycloak:8080/realms/kafka/protocol/openid-connect/token
      CONTROL_CENTER_STREAMS_sasl_oauthbearer_expected_audience: account
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:9093'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    logging:
      driver: none
    networks:
      - fullstack_net

networks:
  fullstack_net:
    driver: bridge